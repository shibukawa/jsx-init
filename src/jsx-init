#!/usr/bin/env node
// generatedy by JSX compiler 0.9.63 (2013-09-05 17:02:24 +0900; e66c4bf3cd46e94387279762e0e414f3b821a25d)
var JSX = {};
(function (JSX) {
/**
 * extends the class
 */
function $__jsx_extend(derivations, base) {
	var ctor = function () {};
	ctor.prototype = base.prototype;
	var proto = new ctor();
	for (var i in derivations) {
		derivations[i].prototype = proto;
	}
}

/**
 * copies the implementations from source interface to target
 */
function $__jsx_merge_interface(target, source) {
	for (var k in source.prototype)
		if (source.prototype.hasOwnProperty(k))
			target.prototype[k] = source.prototype[k];
}

/**
 * defers the initialization of the property
 */
function $__jsx_lazy_init(obj, prop, func) {
	function reset(obj, prop, value) {
		delete obj[prop];
		obj[prop] = value;
		return value;
	}

	Object.defineProperty(obj, prop, {
		get: function () {
			return reset(obj, prop, func());
		},
		set: function (v) {
			reset(obj, prop, v);
		},
		enumerable: true,
		configurable: true
	});
}

/**
 * sideeffect().a /= b
 */
function $__jsx_div_assign(obj, prop, divisor) {
	return obj[prop] = (obj[prop] / divisor) | 0;
}

/*
 * global functions, renamed to avoid conflict with local variable names
 */
var $__jsx_parseInt = parseInt;
var $__jsx_parseFloat = parseFloat;
function $__jsx_isNaN(n) { return n !== n; }
var $__jsx_isFinite = isFinite;

var $__jsx_encodeURIComponent = encodeURIComponent;
var $__jsx_decodeURIComponent = decodeURIComponent;
var $__jsx_encodeURI = encodeURI;
var $__jsx_decodeURI = decodeURI;

var $__jsx_ObjectToString = Object.prototype.toString;
var $__jsx_ObjectHasOwnProperty = Object.prototype.hasOwnProperty;

/*
 * profiler object, initialized afterwards
 */
function $__jsx_profiler() {
}

/*
 * public interface to JSX code
 */
JSX.require = function (path) {
	var m = $__jsx_classMap[path];
	return m !== undefined ? m : null;
};

JSX.profilerIsRunning = function () {
	return $__jsx_profiler.getResults != null;
};

JSX.getProfileResults = function () {
	return ($__jsx_profiler.getResults || function () { return {}; })();
};

JSX.postProfileResults = function (url, cb) {
	if ($__jsx_profiler.postResults == null)
		throw new Error("profiler has not been turned on");
	return $__jsx_profiler.postResults(url, cb);
};

JSX.resetProfileResults = function () {
	if ($__jsx_profiler.resetResults == null)
		throw new Error("profiler has not been turned on");
	return $__jsx_profiler.resetResults();
};
JSX.DEBUG = false;
function StopIteration() {
	Error.call(this);
	this.name = "StopIteration";
	if (Error.captureStackTrace) Error.captureStackTrace(this, StopIteration);
};

$__jsx_extend([StopIteration], Error);
function JSXInit() {
	this.currentDir = "";
	this.dirName = "";
};

$__jsx_extend([JSXInit], Object);
function JSXInit$userDir$LJSXInit$($this) {
	var win32;
	win32 = process.platform === 'win32';
	return process.env[win32 ? 'USERPROFILE' : 'HOME'];
};

JSXInit.userDir$LJSXInit$ = JSXInit$userDir$LJSXInit$;

function JSXInit$defaultSetting$LJSXInit$($this) {
	var userDir;
	var setting;
	var win32$0;
	win32$0 = process.platform === 'win32';
	userDir = process.env[win32$0 ? 'USERPROFILE' : 'HOME'];
	setting = new Setting(userDir);
	return setting;
};

JSXInit.defaultSetting$LJSXInit$ = JSXInit$defaultSetting$LJSXInit$;

function JSXInit$start$LJSXInit$($this) {
	var setting;
	var prompt;
	var userDir$0;
	var setting$0;
	var win32$0$0;
	var question$0;
	var question$1;
	var question$2;
	var question$3;
	var question$4;
	win32$0$0 = process.platform === 'win32';
	userDir$0 = process.env[win32$0$0 ? 'USERPROFILE' : 'HOME'];
	setting$0 = new Setting(userDir$0);
	setting = setting$0;
	prompt = new Prompt();
	question$0 = new OpenQuestion('Name', false, 'Project name', setting.name, (function (value) {
		var value$0;
		value$0 = value.toLowerCase().replace(/[ &*^%$#@!~`+=[]\{}|;':",.\/<>?]/g, '-');
		prompt._json.name = value$0;
	}));
	prompt._questions.push(question$0);
	question$1 = new OpenQuestion$2('name', false, 'npm Package name');
	prompt._questions.push(question$1);
	question$2 = new OpenQuestion$1('description', false, 'Short description', "This is an awesome project to make everyone happy!");
	prompt._questions.push(question$2);
	question$3 = new OpenQuestion$1('version', false, 'Version', '0.1.0');
	prompt._questions.push(question$3);
	question$4 = Setting$getTemplateQuestion$LSetting$(setting);
	prompt._questions.push(question$4);
	Prompt$start$LPrompt$F$BV$(prompt, (function (finish) {
		var name;
		var question$0;
		var question$1;
		var question$2;
		var question$3;
		var question$4;
		var question$5;
		var question$6;
		if (finish) {
			name = prompt._json.name + "";
			question$0 = Setting$getLicenseQuestion$LSetting$I(setting, prompt._json.template | 0);
			prompt._questions.push(question$0);
			question$1 = new OpenQuestion('author', false, 'Author name', setting.author, (function (value) {
				setting.author = value;
				if (setting.mail) {
					Prompt$setDefault$LPrompt$SS(prompt, 'mail', setting.mail);
				} else {
					Prompt$setDefault$LPrompt$SS(prompt, 'mail', JSXInit$normalizeName$LJSXInit$S($this, value) + '@gmail.com');
				}
				if (setting.githubAccount) {
					Prompt$setDefault$LPrompt$SS(prompt, 'repository', 'git@github.com:' + setting.githubAccount + '/' + name + '.git');
				} else if (setting.bitbucketAccount) {
					Prompt$setDefault$LPrompt$SS(prompt, 'repository', 'git@bitbucket.org:' + setting.bitbucketAccount + '/' + name + '.git');
				} else {
					Prompt$setDefault$LPrompt$SS(prompt, 'repository', 'git@github.com:' + JSXInit$normalizeName$LJSXInit$S($this, value) + '/' + name + '.git');
				}
			}));
			prompt._questions.push(question$1);
			question$2 = new OpenQuestion$0('mail', true, "Author's mail address", (function (value) {
				setting.mail = value;
			}));
			prompt._questions.push(question$2);
			question$3 = new OpenQuestion$0('repository', true, "Repository URI", (function (value) {
				var bitbucket;
				var bitbucket_git_https;
				var github;
				var issuetracker;
				var homepage;
				var matched;
				bitbucket = value.match(new RegExp('((https://)|(ssh://hg@)|(git@))bitbucket\.org[:/]([-_a-zA-Z0-9]+)/([-_a-zA-Z0-9]+)(\.git)?'));
				bitbucket_git_https = value.match(new RegExp('https://([-_a-zA-Z0-9]+)@bitbucket\.org/([-_a-zA-Z0-9]+)/([-_a-zA-Z0-9]+)\.git'));
				github = value.match(new RegExp('((https://)|(git@)|(git://))github\.com[:/]([-_a-zA-Z0-9]+)/([-_a-zA-Z0-9]+)(\.git)?'));
				issuetracker = '';
				homepage = '';
				Prompt$setDefault$LPrompt$SS(prompt, 'repositorytype', 'git');
				if (bitbucket) {
					setting.bitbucketAccount = bitbucket[5];
					homepage = 'https://bitbucket.org/' + bitbucket[5] + '/' + bitbucket[6];
					issuetracker = homepage + "/issues?status=new&status=open";
					if (value.indexOf('git@') === - 1) {
						Prompt$setDefault$LPrompt$SS(prompt, 'repositorytype', 'hg');
					}
				} else if (bitbucket_git_https) {
					matched = bitbucket_git_https;
					setting.bitbucketAccount = matched[1];
					homepage = 'https://bitbucket.org/' + matched[1] + '/' + matched[3];
					issuetracker = homepage + "/issues?status=new&status=open";
				} else if (github) {
					setting.githubAccount = github[5];
					homepage = 'https://github.org/' + github[5] + '/' + github[6];
					issuetracker = homepage + "/issues";
				}
				if (homepage) {
					Prompt$setDefault$LPrompt$SS(prompt, 'homepage', homepage);
				}
				if (issuetracker) {
					Prompt$setDefault$LPrompt$SS(prompt, 'issuetracker', issuetracker);
				}
			}));
			prompt._questions.push(question$3);
			question$4 = new OpenQuestion$2('homepage', true, "Where is the project's web page?");
			prompt._questions.push(question$4);
			question$5 = new OpenQuestion$2('issuetracker', true, "Where is the project's issue tracker page?");
			prompt._questions.push(question$5);
			question$6 = new YesNo('travis', "Do you want to have travis.ci setting file?", 'yes');
			prompt._questions.push(question$6);
			Prompt$start$LPrompt$F$BV$(prompt, (function (finish) {
				if (finish) {
					JSXInit$write$LJSXInit$LSetting$HX($this, setting, Prompt$getResult$LPrompt$(prompt));
				}
			}));
		}
	}));
};

JSXInit.start$LJSXInit$ = JSXInit$start$LJSXInit$;

function JSXInit$write$LJSXInit$LSetting$HX($this, setting, result) {
	var template;
	var license;
	var date;
	var selectedTemplate$0;
	var licenseIndex$0;
	var licenses$0;
	console.log('');
	template = setting.templates[result.template | 0];
	selectedTemplate$0 = result.template | 0;
	licenseIndex$0 = result.license | 0;
	licenses$0 = Setting$getCompatibleLicenseList$LSetting$I(setting, selectedTemplate$0);
	license = path$0.resolve(node$0.__dirname, '../share/licenses', licenses$0[licenseIndex$0] + '.md');
	date = new Date();
	result.year = date.getFullYear();
	result.licensename = path$0.basename(license).slice(0, -3);
	Template$generate$LTemplate$HXS(template, result, license);
	Setting$save$LSetting$(setting);
	console.log('\nfinished!');
	console.log("\nCongratulations! Your project folder is prepared. Let\'s start hacking!\nBefore development, launch npm to install Grunt build tool.\n\n$ npm install\n\nYou can use following command:\n\n* Build\n  $ grunt build\n\n* Automatic build\n  $ grunt watch:build\n\n* Run test\n  $ grunt test\n\n* Automatic test\n  $ grunt watch:test\n\n* Generate document\n  $ grunt build\n\nEnjoy JSX!\n");
};

JSXInit.write$LJSXInit$LSetting$HX = JSXInit$write$LJSXInit$LSetting$HX;

function JSXInit$normalizeName$LJSXInit$S($this, name) {
	return name.toLowerCase().replace(/[ &*^%$#@!~`+=[]\{}|;':",.\/<>?]/g, '-');
};

JSXInit.normalizeName$LJSXInit$S = JSXInit$normalizeName$LJSXInit$S;

function _Main() {
};

$__jsx_extend([_Main], Object);
function _Main$main$AS(argv) {
	var init;
	init = ({currentDir: "", dirName: ""});
	JSXInit$start$LJSXInit$(init);
};

_Main.main = _Main$main$AS;
_Main.main$AS = _Main$main$AS;

var node$0 = { __dirname: __dirname, __filename: __filename, require: require };
var fs$0 = require('fs');
var path$0 = require('path');
var child_process$0 = require('child_process');
function Setting(userDir) {
	var templates;
	var files;
	var i;
	var settingFilePath;
	var json;
	var key;
	var jsxinitDir$0;
	var bitbucketAccount$0;
	var githubAccount$0;
	this.templates = null;
	this.licenses = null;
	this.name = "";
	this.author = "";
	this.mail = "";
	this.githubAccount = "";
	this.bitbucketAccount = "";
	templates = ({  });
	jsxinitDir$0 = this.jsxinitDir = path$0.join(userDir, '.jsxinit');
	if (! fs$0.existsSync(jsxinitDir$0)) {
		fs$0.mkdirSync(this.jsxinitDir);
	}
	Setting$getTemplateDirs$LSetting$SHLTemplate$(this, path$0.resolve(node$0.__dirname, '../share/templates'), templates);
	Setting$getTemplateDirs$LSetting$SHLTemplate$(this, path$0.join(userDir, '.jsxinit'), templates);
	files = fs$0.readdirSync(path$0.resolve(node$0.__dirname, '../share/licenses'));
	this.licenses = [  ];
	for (i = 0; i < files.length; i++) {
		if (path$0.extname(files[i]) === '.md') {
			this.licenses.push(files[i].slice(0, -3));
		}
	}
	this.author = path$0.basename(userDir);
	this.name = path$0.basename(process.cwd());
	settingFilePath = path$0.resolve(this.jsxinitDir, 'jsxinit.json');
	if (fs$0.existsSync(settingFilePath)) {
		json = JSON.parse(fs$0.readFileSync(settingFilePath, 'utf8'));
		if (json.author) {
			this.author = json.author + "";
		}
		if (json.mail) {
			this.mail = json.mail + "";
		}
		if (json.bitbucketAccount) {
			bitbucketAccount$0 = this.bitbucketAccount = json.bitbucketAccount + "";
			this.author = bitbucketAccount$0;
		}
		if (json.githubAccount) {
			githubAccount$0 = this.githubAccount = json.githubAccount + "";
			this.author = githubAccount$0;
		}
	}
	this.templates = [  ];
	for (key in templates) {
		if ($__jsx_ObjectHasOwnProperty.call(templates, key)) {
			this.templates.push(templates[key]);
		}
	}
};

$__jsx_extend([Setting], Object);
Setting.prototype.getTemplateDirs$SHLTemplate$ = function (dirroot, result) {
	var dirs;
	var i;
	var settingPath;
	dirs = fs$0.readdirSync(dirroot);
	for (i = 0; i < dirs.length; i++) {
		settingPath = path$0.resolve(dirroot, dirs[i], 'template.json');
		if (fs$0.existsSync(settingPath)) {
			result[dirs[i]] = new Template(dirs[i], path$0.resolve(dirroot, dirs[i]), settingPath);
		}
	}
};


function Setting$getTemplateDirs$LSetting$SHLTemplate$($this, dirroot, result) {
	var dirs;
	var i;
	var settingPath;
	dirs = fs$0.readdirSync(dirroot);
	for (i = 0; i < dirs.length; i++) {
		settingPath = path$0.resolve(dirroot, dirs[i], 'template.json');
		if (fs$0.existsSync(settingPath)) {
			result[dirs[i]] = new Template(dirs[i], path$0.resolve(dirroot, dirs[i]), settingPath);
		}
	}
};

Setting.getTemplateDirs$LSetting$SHLTemplate$ = Setting$getTemplateDirs$LSetting$SHLTemplate$;

Setting.prototype.getTemplateQuestion$ = function () {
	var maxLength;
	var i;
	var template;
	var description;
	var str;
	var j;
	var result;
	maxLength = -1000;
	for (i = 0; i < this.templates.length; i++) {
		template = this.templates[i];
		maxLength = Math.max(maxLength, template.name.length);
	}
	description = [  ];
	for (i = 0; i < this.templates.length; i++) {
		template = this.templates[i];
		str = [ (i + 1 + "") + ": " + template.name ];
		for (j = template.name.length; j < maxLength; j++) {
			str.push(' ');
		}
		str.push(' - ' + template.description);
		description.push(str.join(''));
	}
	result = new Selection('template', 'What type of project do you want to create?', description.join('\n'), (this.templates.length | 0));
	return result;
};


function Setting$getTemplateQuestion$LSetting$($this) {
	var maxLength;
	var i;
	var template;
	var description;
	var str;
	var j;
	var result;
	maxLength = -1000;
	for (i = 0; i < $this.templates.length; i++) {
		template = $this.templates[i];
		maxLength = Math.max(maxLength, template.name.length);
	}
	description = [  ];
	for (i = 0; i < $this.templates.length; i++) {
		template = $this.templates[i];
		str = [ (i + 1 + "") + ": " + template.name ];
		for (j = template.name.length; j < maxLength; j++) {
			str.push(' ');
		}
		str.push(' - ' + template.description);
		description.push(str.join(''));
	}
	result = new Selection('template', 'What type of project do you want to create?', description.join('\n'), ($this.templates.length | 0));
	return result;
};

Setting.getTemplateQuestion$LSetting$ = Setting$getTemplateQuestion$LSetting$;

Setting.prototype.getLicenseQuestion$I = function (selectedTemplate) {
	var licenses;
	var description;
	var i;
	var result;
	licenses = Setting$getCompatibleLicenseList$LSetting$I(this, selectedTemplate);
	description = [  ];
	for (i = 0; i < licenses.length; i++) {
		description.push((i + 1 + "") + ': ' + licenses[i]);
	}
	result = new Selection('license', 'Which license do you use?', description.join('\n'), (this.templates.length | 0));
	return result;
};


function Setting$getLicenseQuestion$LSetting$I($this, selectedTemplate) {
	var licenses;
	var description;
	var i;
	var result;
	licenses = Setting$getCompatibleLicenseList$LSetting$I($this, selectedTemplate);
	description = [  ];
	for (i = 0; i < licenses.length; i++) {
		description.push((i + 1 + "") + ': ' + licenses[i]);
	}
	result = new Selection('license', 'Which license do you use?', description.join('\n'), ($this.templates.length | 0));
	return result;
};

Setting.getLicenseQuestion$LSetting$I = Setting$getLicenseQuestion$LSetting$I;

Setting.prototype.getCompatibleLicenseList$I = function (selectedTemplate) {
	var compatibleLicense;
	var result;
	var i;
	compatibleLicense = this.templates[selectedTemplate].licenses;
	result = [  ];
	for (i = 0; i < this.licenses.length; i++) {
		if (compatibleLicense && compatibleLicense.indexOf(this.licenses[i]) === -1) {
			continue;
		}
		result.push(this.licenses[i]);
	}
	return result;
};


function Setting$getCompatibleLicenseList$LSetting$I($this, selectedTemplate) {
	var compatibleLicense;
	var result;
	var i;
	compatibleLicense = $this.templates[selectedTemplate].licenses;
	result = [  ];
	for (i = 0; i < $this.licenses.length; i++) {
		if (compatibleLicense && compatibleLicense.indexOf($this.licenses[i]) === -1) {
			continue;
		}
		result.push($this.licenses[i]);
	}
	return result;
};

Setting.getCompatibleLicenseList$LSetting$I = Setting$getCompatibleLicenseList$LSetting$I;

Setting.prototype.getLicensePath$II = function (selectedTemplate, licenseIndex) {
	var licenses;
	licenses = Setting$getCompatibleLicenseList$LSetting$I(this, selectedTemplate);
	return path$0.resolve(node$0.__dirname, '../share/licenses', licenses[licenseIndex] + '.md');
};


function Setting$getLicensePath$LSetting$II($this, selectedTemplate, licenseIndex) {
	var licenses;
	licenses = Setting$getCompatibleLicenseList$LSetting$I($this, selectedTemplate);
	return path$0.resolve(node$0.__dirname, '../share/licenses', licenses[licenseIndex] + '.md');
};

Setting.getLicensePath$LSetting$II = Setting$getLicensePath$LSetting$II;

Setting.prototype.save$ = function () {
	var settingFilePath;
	var result;
	settingFilePath = path$0.resolve(this.jsxinitDir, 'jsxinit.json');
	result = ({ author: this.author, mail: this.mail, githubAccount: this.githubAccount, bitbucketAccount: this.bitbucketAccount });
	fs$0.writeFileSync(settingFilePath, JSON.stringify(result, null, 4), 'utf8');
};


function Setting$save$LSetting$($this) {
	var settingFilePath;
	var result;
	settingFilePath = path$0.resolve($this.jsxinitDir, 'jsxinit.json');
	result = ({ author: $this.author, mail: $this.mail, githubAccount: $this.githubAccount, bitbucketAccount: $this.bitbucketAccount });
	fs$0.writeFileSync(settingFilePath, JSON.stringify(result, null, 4), 'utf8');
};

Setting.save$LSetting$ = Setting$save$LSetting$;

function Question() {
	this._key = "";
	this._defaultValue = "";
	this._question = "";
	this._firstMessage = '';
};

$__jsx_extend([Question], Object);
Question.prototype.ask$HXF$BV$ = function (json, finish) {
	var $this = this;
	var rl;
	var defaultValue;
	var question;
	var received;
	var ask;
	var defaultValue$0;
	console.log(this._firstMessage);
	rl = Readline$0.createInterface(({ input: process.stdin, output: process.stdout }));
	defaultValue$0 = this._defaultValue;
	if (this._key && $__jsx_ObjectHasOwnProperty.call(json, this._key)) {
		defaultValue$0 = json[this._key] + "";
	}
	defaultValue = defaultValue$0;
	if (defaultValue$0) {
		question = this._question + ' [' + defaultValue + '] >>> ';
	} else {
		question = this._question + ' >>> ';
	}
	received = false;
	rl.on('close', (function () {
		if (! received) {
			console.log("interrupted");
			finish(false);
		}
	}));
	function ask() {
		rl.question(question, (function (value) {
			if ($this._validate$SS(value, defaultValue)) {
				received = true;
				$this._setResult$X(json);
				rl.close();
				finish(true);
			} else {
				ask();
			}
		}));
	}
	ask();
};


function Question$ask$LQuestion$HXF$BV$($this, json, finish) {
	var rl;
	var defaultValue;
	var question;
	var received;
	var ask;
	var defaultValue$0;
	console.log($this._firstMessage);
	rl = Readline$0.createInterface(({ input: process.stdin, output: process.stdout }));
	defaultValue$0 = $this._defaultValue;
	if ($this._key && $__jsx_ObjectHasOwnProperty.call(json, $this._key)) {
		defaultValue$0 = json[$this._key] + "";
	}
	defaultValue = defaultValue$0;
	if (defaultValue$0) {
		question = $this._question + ' [' + defaultValue + '] >>> ';
	} else {
		question = $this._question + ' >>> ';
	}
	received = false;
	rl.on('close', (function () {
		if (! received) {
			console.log("interrupted");
			finish(false);
		}
	}));
	function ask() {
		rl.question(question, (function (value) {
			if ($this._validate$SS(value, defaultValue)) {
				received = true;
				$this._setResult$X(json);
				rl.close();
				finish(true);
			} else {
				ask();
			}
		}));
	}
	ask();
};

Question.ask$LQuestion$HXF$BV$ = Question$ask$LQuestion$HXF$BV$;

Question.prototype.getDefaultValue$HX = function (json) {
	var defaultValue;
	defaultValue = this._defaultValue;
	if (this._key && $__jsx_ObjectHasOwnProperty.call(json, this._key)) {
		defaultValue = json[this._key] + "";
	}
	return defaultValue;
};


function Question$getDefaultValue$LQuestion$HX($this, json) {
	var defaultValue;
	defaultValue = $this._defaultValue;
	if ($this._key && $__jsx_ObjectHasOwnProperty.call(json, $this._key)) {
		defaultValue = json[$this._key] + "";
	}
	return defaultValue;
};

Question.getDefaultValue$LQuestion$HX = Question$getDefaultValue$LQuestion$HX;

Question.prototype.setValue$XS = function (json, value) {
	var keys;
	var key;
	if (this._key) {
		keys = this._key.split('.');
		while (keys.length > 1) {
			key = keys.shift();
			if (json[key] == null) {
				json[key] = ({  });
			}
			json = json[key];
		}
		json[keys[0]] = value;
	}
};


function Question$setValue$LQuestion$XS($this, json, value) {
	var keys;
	var key;
	if ($this._key) {
		keys = $this._key.split('.');
		while (keys.length > 1) {
			key = keys.shift();
			if (json[key] == null) {
				json[key] = ({  });
			}
			json = json[key];
		}
		json[keys[0]] = value;
	}
};

Question.setValue$LQuestion$XS = Question$setValue$LQuestion$XS;

function OpenQuestion(key, allowEmpty, question, defaultValue, cb) {
	this._firstMessage = '';
	this._result = "";
	this._key = key;
	this._question = question;
	this._defaultValue = defaultValue;
	this._pattern = null;
	this._allowEmpty = allowEmpty;
	this._cb = cb;
};

function OpenQuestion$0(key, allowEmpty, question, cb) {
	this._firstMessage = '';
	this._result = "";
	this._key = key;
	this._question = question;
	this._defaultValue = '';
	this._pattern = null;
	this._allowEmpty = allowEmpty;
	this._cb = cb;
};

function OpenQuestion$1(key, allowEmpty, question, defaultValue) {
	this._firstMessage = '';
	this._result = "";
	this._cb = null;
	this._key = key;
	this._question = question;
	this._defaultValue = defaultValue;
	this._pattern = null;
	this._allowEmpty = allowEmpty;
};

function OpenQuestion$2(key, allowEmpty, question) {
	OpenQuestion$1.call(this, key, allowEmpty, question, '');
};

$__jsx_extend([OpenQuestion, OpenQuestion$0, OpenQuestion$1, OpenQuestion$2], Question);
OpenQuestion.prototype.setPattern$LRegExp$ = function (pattern) {
	this._pattern = pattern;
};


function OpenQuestion$setPattern$LOpenQuestion$LRegExp$($this, pattern) {
	$this._pattern = pattern;
};

OpenQuestion.setPattern$LOpenQuestion$LRegExp$ = OpenQuestion$setPattern$LOpenQuestion$LRegExp$;

OpenQuestion.prototype._setResult$X = function (json) {
	json[this._key] = this._result;
};


OpenQuestion.prototype._validate$SS = function (value, defaultValue) {
	if (value === '') {
		value = defaultValue;
	}
	if (value || this._allowEmpty) {
		this._result = value;
		if (this._cb) {
			this._cb(value);
		}
		return true;
	}
	return false;
};


function Selection(key, question, selectionList, selections) {
	this._first = "";
	this._result = 0;
	this._key = key;
	this._question = question;
	this._firstMessage = '\n' + selectionList + '\n';
	this._selections = selections;
	this._defaultValue = '';
};

$__jsx_extend([Selection], Question);
Selection.prototype._setResult$X = function (json) {
	json[this._key] = this._result;
};


Selection.prototype._validate$SS = function (value, defaultValue) {
	var select;
	if (value === '') {
		return false;
	}
	select = value | 0;
	if (0 < select && select <= this._selections) {
		this._result = (select - 1 | 0);
		return true;
	}
	return false;
};


function YesNo(key, question, defaultValue) {
	this._firstMessage = '';
	this._result = false;
	this._key = key;
	this._question = question;
	this._defaultValue = defaultValue;
};

$__jsx_extend([YesNo], Question);
YesNo.prototype._setResult$X = function (json) {
	json[this._key] = this._result;
};


YesNo.prototype._validate$SS = function (value, defaultValue) {
	if (value === '') {
		value = defaultValue;
	}
	if (value.match(/^y(es)?$/i)) {
		this._result = true;
		return true;
	} else if (value.match(/^n(o)?$/i)) {
		this._result = false;
		return true;
	}
	return false;
};


var js$0 = (function () { var global = (function () { return this; }()); return { global: global, eval: global.eval, invoke: function(invocant, methodName, args) { return invocant[methodName].apply(invocant, args); } }; }());
var ReadStream$0 = require('tty').ReadStream;
var WriteStream$0 = require('tty').WriteStream;
var EventEmitter$0 = require('events').EventEmitter;
function Prompt() {
	EventEmitter$0.call(this);
	this._index = 0;
	this._json = ({  });
	this._questions = [  ];
};

$__jsx_extend([Prompt], EventEmitter$0);
Prompt.prototype.get$S = function (key) {
	return this._json[key];
};


function Prompt$get$LPrompt$S($this, key) {
	return $this._json[key];
};

Prompt.get$LPrompt$S = Prompt$get$LPrompt$S;

Prompt.prototype.setDefault$SS = function (key, value) {
	this._json[key] = value;
};


function Prompt$setDefault$LPrompt$SS($this, key, value) {
	$this._json[key] = value;
};

Prompt.setDefault$LPrompt$SS = Prompt$setDefault$LPrompt$SS;

Prompt.prototype.getResult$ = function () {
	return this._json;
};


function Prompt$getResult$LPrompt$($this) {
	return $this._json;
};

Prompt.getResult$LPrompt$ = Prompt$getResult$LPrompt$;

Prompt.prototype.add$LQuestion$ = function (question) {
	this._questions.push(question);
};


function Prompt$add$LPrompt$LQuestion$($this, question) {
	$this._questions.push(question);
};

Prompt.add$LPrompt$LQuestion$ = Prompt$add$LPrompt$LQuestion$;

Prompt.prototype.start$F$BV$ = function (cb) {
	var $this = this;
	var next;
	function next(success) {
		var question;
		if (! success) {
			cb(false);
		} else if ($this._questions.length > 0) {
			question = $this._questions.shift();
			Question$ask$LQuestion$HXF$BV$(question, $this._json, next);
		} else {
			cb(true);
		}
	}
	next(true);
};


function Prompt$start$LPrompt$F$BV$($this, cb) {
	var next;
	function next(success) {
		var question;
		if (! success) {
			cb(false);
		} else if ($this._questions.length > 0) {
			question = $this._questions.shift();
			Question$ask$LQuestion$HXF$BV$(question, $this._json, next);
		} else {
			cb(true);
		}
	}
	next(true);
};

Prompt.start$LPrompt$F$BV$ = Prompt$start$LPrompt$F$BV$;

function Template(name, templateDir, filepath) {
	var json;
	this.path = "";
	this.licenses = null;
	this.name = name;
	json = JSON.parse(fs$0.readFileSync(filepath, 'utf8'));
	this.description = json.description + "";
	this.dirs = json.dirs;
	this.templates = json.templates;
	this.copyfiles = json.copyfiles;
	if (json.licenses) {
		this.licenses = json.licenses;
	} else {
		this.licenses = null;
	}
	this.path = templateDir;
};

$__jsx_extend([Template], Object);
Template.prototype.generate$HXS = function (result, licenseSrcPath) {
	var i;
	var dirpath;
	var srcPath;
	var licenseDestPath;
	var filepath$0;
	var result$0;
	var filepath$1;
	var result$1;
	for (i = 0; i < this.dirs.length; i++) {
		dirpath = path$0.join(process.cwd(), this.dirs[i]);
		if (! fs$0.existsSync(dirpath)) {
			console.log('creating folder ...', this.dirs[i]);
			fs$0.mkdirSync(dirpath);
		}
	}
	for (i = 0; i < this.copyfiles.length; i++) {
		srcPath = path$0.join(this.path, this.copyfiles[i]);
		filepath$0 = this.copyfiles[i];
		result$0 = path$0.join(process.cwd(), filepath$0);
		if (result$0.indexOf('__name__') !== -1) {
			result$0 = result$0.replace(/__name__/g, result.name + "");
		}
		console.log('copying ...', this.copyfiles[i].replace('__name__', result.name + ""));
		fs$0.writeFileSync(result$0, fs$0.readFileSync(srcPath, 'utf8'), 'utf8');
	}
	console.log('creating ... LICENSE.md');
	licenseDestPath = path$0.join(process.cwd(), "LICENSE.md");
	Template$applyTemplate$LTemplate$SSHX(this, licenseSrcPath, licenseDestPath, result);
	for (i = 0; i < this.templates.length; i++) {
		srcPath = path$0.join(this.path, this.templates[i]);
		filepath$1 = this.templates[i];
		result$1 = path$0.join(process.cwd(), filepath$1);
		if (result$1.indexOf('__name__') !== -1) {
			result$1 = result$1.replace(/__name__/g, result.name + "");
		}
		console.log('creating ...', this.templates[i].replace('__name__', result.name + ""));
		Template$applyTemplate$LTemplate$SSHX(this, srcPath, result$1, result);
	}
};


function Template$generate$LTemplate$HXS($this, result, licenseSrcPath) {
	var i;
	var dirpath;
	var srcPath;
	var licenseDestPath;
	var filepath$0;
	var result$0;
	var filepath$1;
	var result$1;
	for (i = 0; i < $this.dirs.length; i++) {
		dirpath = path$0.join(process.cwd(), $this.dirs[i]);
		if (! fs$0.existsSync(dirpath)) {
			console.log('creating folder ...', $this.dirs[i]);
			fs$0.mkdirSync(dirpath);
		}
	}
	for (i = 0; i < $this.copyfiles.length; i++) {
		srcPath = path$0.join($this.path, $this.copyfiles[i]);
		filepath$0 = $this.copyfiles[i];
		result$0 = path$0.join(process.cwd(), filepath$0);
		if (result$0.indexOf('__name__') !== -1) {
			result$0 = result$0.replace(/__name__/g, result.name + "");
		}
		console.log('copying ...', $this.copyfiles[i].replace('__name__', result.name + ""));
		fs$0.writeFileSync(result$0, fs$0.readFileSync(srcPath, 'utf8'), 'utf8');
	}
	console.log('creating ... LICENSE.md');
	licenseDestPath = path$0.join(process.cwd(), "LICENSE.md");
	Template$applyTemplate$LTemplate$SSHX($this, licenseSrcPath, licenseDestPath, result);
	for (i = 0; i < $this.templates.length; i++) {
		srcPath = path$0.join($this.path, $this.templates[i]);
		filepath$1 = $this.templates[i];
		result$1 = path$0.join(process.cwd(), filepath$1);
		if (result$1.indexOf('__name__') !== -1) {
			result$1 = result$1.replace(/__name__/g, result.name + "");
		}
		console.log('creating ...', $this.templates[i].replace('__name__', result.name + ""));
		Template$applyTemplate$LTemplate$SSHX($this, srcPath, result$1, result);
	}
};

Template.generate$LTemplate$HXS = Template$generate$LTemplate$HXS;

Template.prototype.destPath$SHX = function (filepath, context) {
	var result;
	result = path$0.join(process.cwd(), filepath);
	if (result.indexOf('__name__') !== -1) {
		result = result.replace(/__name__/g, context.name + "");
	}
	return result;
};


function Template$destPath$LTemplate$SHX($this, filepath, context) {
	var result;
	result = path$0.join(process.cwd(), filepath);
	if (result.indexOf('__name__') !== -1) {
		result = result.replace(/__name__/g, context.name + "");
	}
	return result;
};

Template.destPath$LTemplate$SHX = Template$destPath$LTemplate$SHX;

Template.prototype.applyTemplate$SSHX = function (srcPath, destPath, context) {
	var template;
	var text$0;
	var options$0$0;
	var tokens$0$0$0;
	text$0 = fs$0.readFileSync(srcPath, 'utf8');
	options$0$0 = new Hogan$x2EOptions$0();
	template = Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0$0$0 = Hogan$scan$SS(text$0, options$0$0.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0$0$0, [  ], options$0$0.sectionTags)), text$0, options$0$0);
	fs$0.writeFileSync(destPath, Hogan$x2ETemplate$render$LHogan$x2ETemplate$X(template, context), 'utf8');
};


function Template$applyTemplate$LTemplate$SSHX($this, srcPath, destPath, context) {
	var template;
	var text$0;
	var options$0$0;
	var tokens$0$0$0;
	text$0 = fs$0.readFileSync(srcPath, 'utf8');
	options$0$0 = new Hogan$x2EOptions$0();
	template = Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0$0$0 = Hogan$scan$SS(text$0, options$0$0.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0$0$0, [  ], options$0$0.sectionTags)), text$0, options$0$0);
	fs$0.writeFileSync(destPath, Hogan$x2ETemplate$render$LHogan$x2ETemplate$X(template, context), 'utf8');
};

Template.applyTemplate$LTemplate$SSHX = Template$applyTemplate$LTemplate$SSHX;

var Readline$0 = require('readline');
var Readable$0 = require('stream').Readable;
var Writable$0 = require('stream').Writable;
var Duplex$0 = require('stream').Duplex;
var HoganJavaScriptHelper$0 = 
{
    generateTemplateFunc : function (body) { return new Function('c', 'p', 'i', body); },
    generatePartialFunc : function (body) { return new Function('c', 'p', 't', 'i', body); }
}
;
function Hogan() {
};

$__jsx_extend([Hogan], Object);
function Hogan$scan$SS(text, delimiters) {
	var len;
	var IN_TEXT;
	var IN_TAG_TYPE;
	var IN_TAG;
	var state;
	var tagType;
	var buf;
	var tokens;
	var seenTag;
	var seenTagPosition;
	var i;
	var lineStart;
	var otag;
	var ctag;
	var addBuf;
	var lineIsWhitespace;
	var filterLine;
	var changeDelimiters;
	var delimitersWords;
	var tagExists;
	var token$0;
	len = text.length;
	IN_TEXT = 0;
	IN_TAG_TYPE = 1;
	IN_TAG = 2;
	state = IN_TEXT;
	tagType = '';
	buf = '';
	tokens = [  ];
	seenTag = false;
	seenTagPosition = 0;
	i = 0;
	lineStart = 0;
	otag = '{{';
	ctag = '}}';
	function addBuf() {
		if (buf.length > 0) {
			tokens.push(({tag: '_t', text: buf, indent: "", n: "", otag: "", ctag: "", i: 0, end: 0, last: false, nodes: null}));
			buf = '';
		}
	}
	function lineIsWhitespace() {
		var isAllWhitespace;
		var j;
		var tokens$len$0;
		isAllWhitespace = true;
		for ((j = lineStart, tokens$len$0 = tokens.length); j < tokens$len$0; j++) {
			isAllWhitespace = Hogan.tags[tokens[j].tag] < Hogan.tags._v || tokens[j].tag === '_t' && tokens[j].text.match(Hogan.rIsWhitespace) == null;
			if (! isAllWhitespace) {
				return false;
			}
		}
		return isAllWhitespace;
	}
	function filterLine(haveSeenTag, noNewLine) {
		var j;
		var next;
		addBuf();
		if (haveSeenTag && lineIsWhitespace()) {
			for (j = lineStart; j < tokens.length; j++) {
				if (tokens[j].text) {
					if ((next = tokens[j + 1]) && next.tag === '>') {
						next.indent = tokens[j].text.toString();
					}
					tokens.splice(j, 1);
				}
			}
		} else if (! noNewLine) {
			tokens.push(new Hogan$x2EToken$0('\n'));
		}
		seenTag = false;
		seenTagPosition = 0;
		lineStart = tokens.length;
	}
	function changeDelimiters(text, index) {
		var close;
		var closeIndex;
		var delimiters;
		close = '=' + ctag;
		closeIndex = text.indexOf(close, index);
		delimiters = text.substring(text.indexOf('=', index) + 1, closeIndex).trim().split(' ');
		otag = delimiters[0];
		ctag = delimiters[delimiters.length - 1];
		return (closeIndex + close.length - 1 | 0);
	}
	if (delimiters) {
		delimitersWords = delimiters.split(' ');
		otag = delimitersWords[0];
		ctag = delimitersWords[1];
	}
	for (i = 0; i < len; i++) {
		if (state === IN_TEXT) {
			if (Hogan$tagChange$SSI(otag, text, (i | 0))) {
				-- i;
				addBuf();
				state = IN_TAG_TYPE;
			} else if (text.charAt(i) === '\n') {
				filterLine(seenTag, false);
			} else {
				buf += text.charAt(i);
			}
		} else if (state === IN_TAG_TYPE) {
			i += otag.length - 1;
			tagExists = Hogan.tags[text.charAt(i + 1)];
			tagType = (tagExists ? text.charAt(i + 1) : '_v');
			if (tagType === '=') {
				i = changeDelimiters(text, (i | 0));
				state = IN_TEXT;
			} else {
				if (tagExists) {
					i++;
				}
				state = IN_TAG;
			}
			seenTag = !! i;
			seenTagPosition = (i | 0);
		} else if (Hogan$tagChange$SSI(ctag, text, (i | 0))) {
			tokens.push(({tag: tagType, text: "", indent: "", n: buf.trim(), otag: otag, ctag: ctag, i: (tagType === '/' ? seenTagPosition - otag.length : i + ctag.length), end: 0, last: false, nodes: null}));
			buf = '';
			i += ctag.length - 1;
			state = IN_TEXT;
			if (tagType === '{') {
				if (ctag === '}}') {
					i++;
				} else {
					token$0 = tokens[tokens.length - 1];
					if (token$0.n.slice(-1) === '}') {
						token$0.n = token$0.n.slice(0, -1);
					}
				}
			}
		} else {
			buf += text.charAt(i);
		}
	}
	filterLine(seenTag, true);
	return tokens;
};

Hogan.scan$SS = Hogan$scan$SS;

function Hogan$cleanTripleStache$LHogan$x2EToken$(token) {
	if (token.n.slice(-1) === '}') {
		token.n = token.n.slice(0, -1);
	}
};

Hogan.cleanTripleStache$LHogan$x2EToken$ = Hogan$cleanTripleStache$LHogan$x2EToken$;

function Hogan$tagChange$SSI(tag, text, index) {
	var i;
	var l;
	if (text.charAt(index) !== tag.charAt(0)) {
		return false;
	}
	for ((i = 1, l = tag.length); i < l; i++) {
		if (text.charAt(index + i) !== tag.charAt(i)) {
			return false;
		}
	}
	return true;
};

Hogan.tagChange$SSI = Hogan$tagChange$SSI;

function Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens, stack, customTags) {
	var instructions;
	var opener;
	var tail;
	var token;
	instructions = [  ];
	opener = null;
	tail = stack[stack.length - 1];
	token = null;
	while (tokens.length > 0) {
		token = tokens.shift();
		if (tail && tail.tag === '<' && ! (token.tag in Hogan.allowedInSuper)) {
			throw new Error('Illegal content in < super tag.');
		}
		if (Hogan.tags[token.tag] && Hogan.tags[token.tag] <= Hogan.tags.$ || Hogan$isOpener$LHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(token, customTags)) {
			stack.push(token);
			token.nodes = Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens, stack, customTags);
		} else if (token.tag === '/') {
			if (stack.length === 0) {
				throw new Error('Closing tag without opener: /' + token.n);
			}
			opener = stack.pop();
			if (token.n !== opener.n && ! Hogan$isCloser$SSALHogan$x2EOptions$x2ECustomTag$(token.n, opener.n, customTags)) {
				throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);
			}
			opener.end = token.i;
			return instructions;
		} else if (token.tag === '\n') {
			token.last = tokens.length === 0 || tokens[0].tag === '\n';
		}
		instructions.push(token);
	}
	if (stack.length > 0) {
		throw new Error('missing closing tag: ' + stack.pop().n);
	}
	return instructions;
};

Hogan.buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$ = Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$;

function Hogan$isOpener$LHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(token, tags) {
	var i;
	var l;
	for ((i = 0, l = tags.length); i < l; i++) {
		if (tags[i].o === token.n) {
			token.tag = '#';
			return true;
		}
	}
	return false;
};

Hogan.isOpener$LHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$ = Hogan$isOpener$LHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$;

function Hogan$isCloser$SSALHogan$x2EOptions$x2ECustomTag$(close, open, tags) {
	var i;
	var l;
	for ((i = 0, l = tags.length); i < l; i++) {
		if (tags[i].c === close && tags[i].o === open) {
			return true;
		}
	}
	return false;
};

Hogan.isCloser$SSALHogan$x2EOptions$x2ECustomTag$ = Hogan$isCloser$SSALHogan$x2EOptions$x2ECustomTag$;

function Hogan$stringifySubstitutions$HS(obj) {
	var items;
	var key;
	items = [  ];
	for (key in obj) {
		items.push('"' + key.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r') + '": function(c,p,t,i) {' + obj[key] + '}');
	}
	return "{ " + items.join(",") + " }";
};

Hogan.stringifySubstitutions$HS = Hogan$stringifySubstitutions$HS;

function Hogan$stringifyPartials$LHogan$x2ECodeObj$(codeObj) {
	var partials;
	var key;
	var s$0;
	partials = [  ];
	for (key in codeObj.partials) {
		partials.push('"' + key.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r') + '":{name:"' + (s$0 = codeObj.partials[key].name, s$0.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '", ' + Hogan$stringifyPartials$LHogan$x2ECodeObj$(codeObj.partials[key]) + "}");
	}
	return "new Hogan.Template({" + partials.join(",") + "}, " + Hogan$stringifySubstitutions$HS(codeObj.subs) + ")";
};

Hogan.stringifyPartials$LHogan$x2ECodeObj$ = Hogan$stringifyPartials$LHogan$x2ECodeObj$;

function Hogan$stringify$LHogan$x2ECodeObj$SX(codeObj, text, options) {
	var src;
	var code$0;
	src = [ "  override function r (c:variant,p:Map.<Hogan.Template>,i:int):string {", "    " + (code$0 = codeObj.code, 'var t=this;t.b(i=i||"");' + code$0 + 'return t.fl();'), "  }\n", "  override function getPartials() : Map<Hogan.Template> {", "    return " + Hogan$stringifyPartials$LHogan$x2ECodeObj$(codeObj) + ";\n  }\n" ];
	return src.join('\n');
};

Hogan.stringify$LHogan$x2ECodeObj$SX = Hogan$stringify$LHogan$x2ECodeObj$SX;

function Hogan$generateJSX$ALHogan$x2EToken$SLHogan$x2EOptions$(tree, text, options) {
	var context;
	var src;
	Hogan.serialNo = 0;
	context = ({partials: ({  }), code: '', subs: ({  }), prefix: "", inPartial: false, name: "", rawJSX: false});
	context.rawJSX = false;
	Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(tree, context);
	src = [ 'import "hogan/template.jsx";', 'class GeneratedTemplate extends Hogan.Template {', Hogan$stringify$LHogan$x2ECodeObj$SX(context, text, options), '}' ];
	return src.join('\n');
};

Hogan.generateJSX$ALHogan$x2EToken$SLHogan$x2EOptions$ = Hogan$generateJSX$ALHogan$x2EToken$SLHogan$x2EOptions$;

function Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$(tree, text, options) {
	var context;
	var template$0;
	var code$0;
	var code$0$0;
	Hogan.serialNo = 0;
	context = ({partials: ({  }), code: '', subs: ({  }), prefix: "", inPartial: false, name: "", rawJSX: false});
	context.rawJSX = true;
	Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(tree, context);
	template$0 = Hogan$makePartials$LHogan$x2ECodeObj$(context);
	code$0 = HoganJavaScriptHelper$0.generateTemplateFunc((code$0$0 = context.code, 'var t=this;t.b$S(i=i||"");' + code$0$0 + 'return t.fl$();'));
	return new Hogan$x2EGeneratedTemplate(code$0, template$0, text, options);
};

Hogan.generate$ALHogan$x2EToken$SLHogan$x2EOptions$ = Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$;

function Hogan$makeTemplate$LHogan$x2ECodeObj$SLHogan$x2EOptions$(codeObj, text, options) {
	var template;
	var code;
	var code$0;
	template = Hogan$makePartials$LHogan$x2ECodeObj$(codeObj);
	code = HoganJavaScriptHelper$0.generateTemplateFunc((code$0 = codeObj.code, 'var t=this;t.b$S(i=i||"");' + code$0 + 'return t.fl$();'));
	return new Hogan$x2EGeneratedTemplate(code, template, text, options);
};

Hogan.makeTemplate$LHogan$x2ECodeObj$SLHogan$x2EOptions$ = Hogan$makeTemplate$LHogan$x2ECodeObj$SLHogan$x2EOptions$;

function Hogan$makePartials$LHogan$x2ECodeObj$(codeObj) {
	var template;
	var key;
	var code$0;
	template = new Hogan$x2ETemplate$4(codeObj);
	for (key in codeObj.partials) {
		if ($__jsx_ObjectHasOwnProperty.call(codeObj.partials, key)) {
			template.partials[key] = Hogan$makePartials$LHogan$x2ECodeObj$(codeObj.partials[key]);
		}
	}
	for (key in codeObj.subs) {
		if ($__jsx_ObjectHasOwnProperty.call(codeObj.subs, key)) {
			template.subs[key] = HoganJavaScriptHelper$0.generatePartialFunc((code$0 = codeObj.subs[key], 'var t=this;t.b(i=i||"");' + code$0 + 'return t.fl();'));
		}
	}
	return template;
};

Hogan.makePartials$LHogan$x2ECodeObj$ = Hogan$makePartials$LHogan$x2ECodeObj$;

function Hogan$wrapMain$S(code) {
	return 'var t=this;t.b(i=i||"");' + code + 'return t.fl();';
};

Hogan.wrapMain$S = Hogan$wrapMain$S;

function Hogan$wrapMainJSX$S(code) {
	return 'var t=this;t.b$S(i=i||"");' + code + 'return t.fl$();';
};

Hogan.wrapMainJSX$S = Hogan$wrapMainJSX$S;

function Hogan$esc$S(s) {
	return s.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r');
};

Hogan.esc$S = Hogan$esc$S;

function Hogan$chooseMethod$S(s) {
	return (~ s.indexOf('.') ? 'd' : 'f');
};

Hogan.chooseMethod$S = Hogan$chooseMethod$S;

function Hogan$chooseMethodJSX$S(s) {
	return (~ s.indexOf('.') ? 'd' : 'f') + "$SAXHLHogan$x2ETemplate$B";
};

Hogan.chooseMethodJSX$S = Hogan$chooseMethodJSX$S;

function Hogan$createPartial$LHogan$x2EToken$LHogan$x2ECodeObj$(node, context) {
	var prefix;
	var sym;
	var partial;
	prefix = "<" + (context.prefix ? context.prefix : "");
	sym = prefix + node.n + (Hogan.serialNo++ + "");
	partial = ({partials: ({  }), code: "", subs: null, prefix: "", inPartial: false, name: node.n, rawJSX: false});
	partial.rawJSX = context.rawJSX;
	context.partials[sym] = partial;
	if (context.rawJSX) {
		context.code += 't.b$S(t.rp$SAXHLHogan$x2ETemplate$S("' + sym.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r') + '",c,p,"' + (node.indent ? node.indent : '') + '"));';
	} else {
		context.code += 't.b(t.rp("' + sym.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r') + '",c,p,"' + (node.indent ? node.indent : '') + '"));';
	}
	return sym;
};

Hogan.createPartial$LHogan$x2EToken$LHogan$x2ECodeObj$ = Hogan$createPartial$LHogan$x2EToken$LHogan$x2ECodeObj$;

function Hogan$tripleStache$LHogan$x2EToken$LHogan$x2ECodeObj$(node, context) {
	var s$0;
	var s$1;
	var s$2;
	var s$3;
	if (context.rawJSX) {
		context.code += 't.b$S(t.t$S(t.' + (s$0 = node.n, (~ s$0.indexOf('.') ? 'd' : 'f') + "$SAXHLHogan$x2ETemplate$B") + '("' + (s$1 = node.n, s$1.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,0)));';
	} else {
		context.code += 't.b(t.t(t.' + (s$2 = node.n, ~ s$2.indexOf('.') ? 'd' : 'f') + '("' + (s$3 = node.n, s$3.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,0)));';
	}
};

Hogan.tripleStache$LHogan$x2EToken$LHogan$x2ECodeObj$ = Hogan$tripleStache$LHogan$x2EToken$LHogan$x2ECodeObj$;

function Hogan$write$SLHogan$x2ECodeObj$(s, context) {
	return (context.rawJSX ? 't.b$S(' + s + ');' : 't.b(' + s + ');');
};

Hogan.write$SLHogan$x2ECodeObj$ = Hogan$write$SLHogan$x2ECodeObj$;

function Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(nodelist, context) {
	var func;
	var i;
	var l;
	for ((i = 0, l = nodelist.length); i < l; i++) {
		func = Hogan.codegen[nodelist[i].tag];
		if (func) {
			func(nodelist[i], context);
		}
	}
	return context;
};

Hogan.walk$ALHogan$x2EToken$LHogan$x2ECodeObj$ = Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$;

function Hogan$parse$ALHogan$x2EToken$LHogan$x2EOptions$(tokens, options) {
	return Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens, [  ], options.sectionTags);
};

Hogan.parse$ALHogan$x2EToken$LHogan$x2EOptions$ = Hogan$parse$ALHogan$x2EToken$LHogan$x2EOptions$;

function Hogan$parse$ALHogan$x2EToken$X(tokens, options) {
	var optionObj;
	optionObj = new Hogan$x2EOptions(options);
	return Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens, [  ], optionObj.sectionTags);
};

Hogan.parse$ALHogan$x2EToken$X = Hogan$parse$ALHogan$x2EToken$X;

function Hogan$parse$ALHogan$x2EToken$(tokens) {
	return Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens, [  ], [  ]);
};

Hogan.parse$ALHogan$x2EToken$ = Hogan$parse$ALHogan$x2EToken$;

function Hogan$compileToJSX$SLHogan$x2EOptions$(text, options) {
	var tokens$0;
	return Hogan$generateJSX$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0 = Hogan$scan$SS(text, options.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0, [  ], options.sectionTags)), text, options);
};

Hogan.compileToJSX$SLHogan$x2EOptions$ = Hogan$compileToJSX$SLHogan$x2EOptions$;

function Hogan$compileToJSX$S(text) {
	var options$0;
	var tokens$0$0;
	options$0 = new Hogan$x2EOptions$0();
	return Hogan$generateJSX$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0$0 = Hogan$scan$SS(text, options$0.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0$0, [  ], options$0.sectionTags)), text, options$0);
};

Hogan.compileToJSX$S = Hogan$compileToJSX$S;

function Hogan$compileToJSX$SX(text, options) {
	var options$0;
	var tokens$0$0;
	options$0 = new Hogan$x2EOptions(options);
	return Hogan$generateJSX$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0$0 = Hogan$scan$SS(text, options$0.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0$0, [  ], options$0.sectionTags)), text, options$0);
};

Hogan.compileToJSX$SX = Hogan$compileToJSX$SX;

function Hogan$compile$SLHogan$x2EOptions$(text, options) {
	var tokens$0;
	return Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0 = Hogan$scan$SS(text, options.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0, [  ], options.sectionTags)), text, options);
};

Hogan.compile$SLHogan$x2EOptions$ = Hogan$compile$SLHogan$x2EOptions$;

function Hogan$compile$S(text) {
	var options$0;
	var tokens$0$0;
	options$0 = new Hogan$x2EOptions$0();
	return Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0$0 = Hogan$scan$SS(text, options$0.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0$0, [  ], options$0.sectionTags)), text, options$0);
};

Hogan.compile$S = Hogan$compile$S;

function Hogan$compile$SX(text, options) {
	var options$0;
	var tokens$0$0;
	options$0 = new Hogan$x2EOptions(options);
	return Hogan$generate$ALHogan$x2EToken$SLHogan$x2EOptions$((tokens$0$0 = Hogan$scan$SS(text, options$0.delimiters), Hogan$buildTree$ALHogan$x2EToken$ALHogan$x2EToken$ALHogan$x2EOptions$x2ECustomTag$(tokens$0$0, [  ], options$0.sectionTags)), text, options$0);
};

Hogan.compile$SX = Hogan$compile$SX;

function Hogan$x2EOptions(options) {
	this.delimiters = "";
	this.disableLambda = false;
	this.asString = false;
	this.modelGet = false;
	this.sectionTags = [  ];
	if (options) {
		this.asString = !! options.asString;
		this.modelGet = !! options.modelGet;
		if (options.sectionTags) {
			this.sectionTags = options.sectionTags;
		}
		if (options.delimiters) {
			this.delimiters = options.delimiters + "";
		}
	}
};

function Hogan$x2EOptions$0() {
	Hogan$x2EOptions.call(this, null);
};

$__jsx_extend([Hogan$x2EOptions, Hogan$x2EOptions$0], Object);
function Hogan$x2ECodeObj() {
	this.prefix = "";
	this.inPartial = false;
	this.name = "";
	this.rawJSX = false;
	this.partials = ({  });
	this.code = '';
	this.subs = ({  });
};

function Hogan$x2ECodeObj$0(codeObj) {
	this.prefix = "";
	this.inPartial = false;
	this.rawJSX = false;
	this.partials = codeObj.partials;
	this.code = '';
	this.name = codeObj.name;
	this.subs = ({  });
};

function Hogan$x2ECodeObj$1(codeObj, node) {
	this.inPartial = false;
	this.name = "";
	this.rawJSX = false;
	this.partials = codeObj.partials;
	this.subs = ({  });
	this.code = '';
	this.prefix = node.n;
};

function Hogan$x2ECodeObj$2(node) {
	this.code = "";
	this.subs = null;
	this.prefix = "";
	this.inPartial = false;
	this.rawJSX = false;
	this.name = node.n;
	this.partials = ({  });
};

$__jsx_extend([Hogan$x2ECodeObj, Hogan$x2ECodeObj$0, Hogan$x2ECodeObj$1, Hogan$x2ECodeObj$2], Object);
function Hogan$x2EToken(tag, text) {
	this.indent = "";
	this.n = "";
	this.otag = "";
	this.ctag = "";
	this.i = 0;
	this.end = 0;
	this.nodes = null;
	this.tag = tag;
	this.text = text;
	this.last = false;
};

function Hogan$x2EToken$0(tag) {
	Hogan$x2EToken.call(this, tag, '');
};

function Hogan$x2EToken$1(tag, n, otag, ctag, i) {
	this.text = "";
	this.indent = "";
	this.end = 0;
	this.nodes = null;
	this.tag = tag;
	this.n = n;
	this.otag = otag;
	this.ctag = ctag;
	this.i = i;
	this.last = false;
};

$__jsx_extend([Hogan$x2EToken, Hogan$x2EToken$0, Hogan$x2EToken$1], Object);
function Hogan$x2ETemplate(text, options) {
	this.buf = null;
	this.activeSub = null;
	this.name = "";
	this.stackSubs = null;
	this.subsText = null;
	this.options = (options ? options : new Hogan$x2EOptions$0());
	this.text = text;
	this.partials = ({  });
	this.subs = ({  });
	this.stackPartials = ({  });
	this.stackTexts = [  ];
	this.stackTextIndex = [  ];
	this.buf = [  ];
};

function Hogan$x2ETemplate$0(text) {
	Hogan$x2ETemplate.call(this, text, null);
};

function Hogan$x2ETemplate$1() {
	Hogan$x2ETemplate.call(this, '', null);
};

function Hogan$x2ETemplate$2(instance, subs, partials, stackSubs, stackPartials, childText) {
	var key;
	this.options = null;
	this.text = "";
	this.partials = null;
	this.activeSub = null;
	this.name = "";
	this.stackPartials = null;
	this.stackTexts = null;
	this.stackTextIndex = null;
	this.stackSubs = (stackSubs ? stackSubs : ({  }));
	this.subs = instance.subs;
	this.subsText = ({  });
	this.buf = [  ];
	for (key in subs) {
		if (! stackSubs[key]) {
			stackSubs[key] = subs[key];
		}
		this.subsText[key] = childText;
	}
	for (key in stackSubs) {
		this.subs[key] = stackSubs[key];
	}
	this.stackPartials = stackPartials;
	for (key in partials) {
		if (! this.stackPartials[key]) {
			this.stackPartials[key] = partials[key];
		}
	}
	for (key in stackPartials) {
		this.partials[key] = stackPartials[key];
	}
	this.stackTexts = [  ];
	this.stackTextIndex = [  ];
};

function Hogan$x2ETemplate$3(partials, subs) {
	this.options = null;
	this.text = "";
	this.buf = null;
	this.activeSub = null;
	this.name = "";
	this.stackSubs = null;
	this.stackPartials = null;
	this.stackTexts = null;
	this.stackTextIndex = null;
	this.subsText = null;
	this.partials = partials;
	this.subs = subs;
};

function Hogan$x2ETemplate$4(codeObj) {
	this.options = null;
	this.text = "";
	this.subs = null;
	this.buf = null;
	this.activeSub = null;
	this.stackSubs = null;
	this.stackPartials = null;
	this.stackTexts = null;
	this.stackTextIndex = null;
	this.subsText = null;
	this.name = codeObj.name;
	this.partials = ({  });
};

$__jsx_extend([Hogan$x2ETemplate, Hogan$x2ETemplate$0, Hogan$x2ETemplate$1, Hogan$x2ETemplate$2, Hogan$x2ETemplate$3, Hogan$x2ETemplate$4], Object);
Hogan$x2ETemplate.prototype.r$AXHLHogan$x2ETemplate$S = function (context, partials, indent) {
	return '';
};


Hogan$x2ETemplate.prototype.getPartials$ = function () {
	return ({  });
};


function Hogan$x2ETemplate$getPartials$LHogan$x2ETemplate$($this) {
	return ({  });
};

Hogan$x2ETemplate.getPartials$LHogan$x2ETemplate$ = Hogan$x2ETemplate$getPartials$LHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.getSubs$ = function () {
	return ({  });
};


function Hogan$x2ETemplate$getSubs$LHogan$x2ETemplate$($this) {
	return ({  });
};

Hogan$x2ETemplate.getSubs$LHogan$x2ETemplate$ = Hogan$x2ETemplate$getSubs$LHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.v$S = function (str) {
	return Hogan$x2ETemplate$hoganEscape$S(str);
};


function Hogan$x2ETemplate$v$LHogan$x2ETemplate$S($this, str) {
	return Hogan$x2ETemplate$hoganEscape$S(str);
};

Hogan$x2ETemplate.v$LHogan$x2ETemplate$S = Hogan$x2ETemplate$v$LHogan$x2ETemplate$S;

Hogan$x2ETemplate.prototype.t$S = function (str) {
	return Hogan$x2ETemplate$coerceToString$X(str);
};


function Hogan$x2ETemplate$t$LHogan$x2ETemplate$S($this, str) {
	return Hogan$x2ETemplate$coerceToString$X(str);
};

Hogan$x2ETemplate.t$LHogan$x2ETemplate$S = Hogan$x2ETemplate$t$LHogan$x2ETemplate$S;

Hogan$x2ETemplate.prototype.render$XHLHogan$x2ETemplate$S = function (context, partials, indent) {
	var context$0;
	context$0 = [ context ];
	return this.r$AXHLHogan$x2ETemplate$S(context$0, partials, indent);
};


function Hogan$x2ETemplate$render$LHogan$x2ETemplate$XHLHogan$x2ETemplate$S($this, context, partials, indent) {
	var context$0;
	context$0 = [ context ];
	return $this.r$AXHLHogan$x2ETemplate$S(context$0, partials, indent);
};

Hogan$x2ETemplate.render$LHogan$x2ETemplate$XHLHogan$x2ETemplate$S = Hogan$x2ETemplate$render$LHogan$x2ETemplate$XHLHogan$x2ETemplate$S;

Hogan$x2ETemplate.prototype.render$XHLHogan$x2ETemplate$ = function (context, partials) {
	var context$0$0;
	context$0$0 = [ context ];
	return this.r$AXHLHogan$x2ETemplate$S(context$0$0, partials, '');
};


function Hogan$x2ETemplate$render$LHogan$x2ETemplate$XHLHogan$x2ETemplate$($this, context, partials) {
	var context$0$0;
	context$0$0 = [ context ];
	return $this.r$AXHLHogan$x2ETemplate$S(context$0$0, partials, '');
};

Hogan$x2ETemplate.render$LHogan$x2ETemplate$XHLHogan$x2ETemplate$ = Hogan$x2ETemplate$render$LHogan$x2ETemplate$XHLHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.render$X = function (context) {
	var context$0$0;
	context$0$0 = [ context ];
	return this.r$AXHLHogan$x2ETemplate$S(context$0$0, ({  }), '');
};


function Hogan$x2ETemplate$render$LHogan$x2ETemplate$X($this, context) {
	var context$0$0;
	context$0$0 = [ context ];
	return $this.r$AXHLHogan$x2ETemplate$S(context$0$0, ({  }), '');
};

Hogan$x2ETemplate.render$LHogan$x2ETemplate$X = Hogan$x2ETemplate$render$LHogan$x2ETemplate$X;

Hogan$x2ETemplate.prototype.ri$AXHLHogan$x2ETemplate$S = function (context, partials, indent) {
	return this.r$AXHLHogan$x2ETemplate$S(context, partials, indent);
};


function Hogan$x2ETemplate$ri$LHogan$x2ETemplate$AXHLHogan$x2ETemplate$S($this, context, partials, indent) {
	return $this.r$AXHLHogan$x2ETemplate$S(context, partials, indent);
};

Hogan$x2ETemplate.ri$LHogan$x2ETemplate$AXHLHogan$x2ETemplate$S = Hogan$x2ETemplate$ri$LHogan$x2ETemplate$AXHLHogan$x2ETemplate$S;

Hogan$x2ETemplate.prototype.ep$SHLHogan$x2ETemplate$ = function (symbol, partials) {
	var partial;
	var template;
	var index;
	var childText;
	var subs$0;
	var partials$0;
	var stackSubs$0;
	var stackPartials$0;
	var stackTextIndex$0;
	partial = this.partials[symbol];
	template = partials[partial.name];
	if (! template) {
		return null;
	}
	if (partial.subs) {
		index = this.stackTextIndex.indexOf(partials);
		if (this.activeSub == null) {
			if (index === -1) {
				index = (stackTextIndex$0 = this.stackTextIndex).length;
				stackTextIndex$0.push(partials);
			}
			this.stackTexts[index] = this.text;
			childText = this.text;
		} else {
			childText = (index === -1 ? this.text : this.stackTexts[index]);
		}
		subs$0 = partial.subs;
		partials$0 = partial.partials;
		stackSubs$0 = this.stackSubs;
		stackPartials$0 = this.stackPartials;
		template = new Hogan$x2ETemplate$2(template, subs$0, partials$0, stackSubs$0, stackPartials$0, childText);
	}
	return template;
};


function Hogan$x2ETemplate$ep$LHogan$x2ETemplate$SHLHogan$x2ETemplate$($this, symbol, partials) {
	var partial;
	var template;
	var index;
	var childText;
	var subs$0;
	var partials$0;
	var stackSubs$0;
	var stackPartials$0;
	var stackTextIndex$0;
	partial = $this.partials[symbol];
	template = partials[partial.name];
	if (! template) {
		return null;
	}
	if (partial.subs) {
		index = $this.stackTextIndex.indexOf(partials);
		if ($this.activeSub == null) {
			if (index === -1) {
				index = (stackTextIndex$0 = $this.stackTextIndex).length;
				stackTextIndex$0.push(partials);
			}
			$this.stackTexts[index] = $this.text;
			childText = $this.text;
		} else {
			childText = (index === -1 ? $this.text : $this.stackTexts[index]);
		}
		subs$0 = partial.subs;
		partials$0 = partial.partials;
		stackSubs$0 = $this.stackSubs;
		stackPartials$0 = $this.stackPartials;
		template = new Hogan$x2ETemplate$2(template, subs$0, partials$0, stackSubs$0, stackPartials$0, childText);
	}
	return template;
};

Hogan$x2ETemplate.ep$LHogan$x2ETemplate$SHLHogan$x2ETemplate$ = Hogan$x2ETemplate$ep$LHogan$x2ETemplate$SHLHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.rp$SAXHLHogan$x2ETemplate$S = function (symbol, context, partials, indent) {
	var partial;
	partial = Hogan$x2ETemplate$ep$LHogan$x2ETemplate$SHLHogan$x2ETemplate$(this, symbol, partials);
	return (! partial ? '' : partial.r$AXHLHogan$x2ETemplate$S(context, partials, indent));
};


function Hogan$x2ETemplate$rp$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$S($this, symbol, context, partials, indent) {
	var partial;
	partial = Hogan$x2ETemplate$ep$LHogan$x2ETemplate$SHLHogan$x2ETemplate$($this, symbol, partials);
	return (! partial ? '' : partial.r$AXHLHogan$x2ETemplate$S(context, partials, indent));
};

Hogan$x2ETemplate.rp$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$S = Hogan$x2ETemplate$rp$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$S;

Hogan$x2ETemplate.prototype.rs$AXHLHogan$x2ETemplate$F$XHLHogan$x2ETemplate$LHogan$x2ETemplate$V$ = function (context, partials, section) {
	var tail;
	var tailarray;
	var i;
	tail = context[context.length - 1];
	if (! (tail instanceof Array)) {
		section(context, partials, this);
		return;
	}
	tailarray = tail;
	for (i = 0; i < tailarray.length; i++) {
		context.push(tailarray[i]);
		section(context, partials, this);
		context.pop();
	}
};


function Hogan$x2ETemplate$rs$LHogan$x2ETemplate$AXHLHogan$x2ETemplate$F$XHLHogan$x2ETemplate$LHogan$x2ETemplate$V$($this, context, partials, section) {
	var tail;
	var tailarray;
	var i;
	tail = context[context.length - 1];
	if (! (tail instanceof Array)) {
		section(context, partials, $this);
		return;
	}
	tailarray = tail;
	for (i = 0; i < tailarray.length; i++) {
		context.push(tailarray[i]);
		section(context, partials, $this);
		context.pop();
	}
};

Hogan$x2ETemplate.rs$LHogan$x2ETemplate$AXHLHogan$x2ETemplate$F$XHLHogan$x2ETemplate$LHogan$x2ETemplate$V$ = Hogan$x2ETemplate$rs$LHogan$x2ETemplate$AXHLHogan$x2ETemplate$F$XHLHogan$x2ETemplate$LHogan$x2ETemplate$V$;

Hogan$x2ETemplate.prototype.s$XAXHLHogan$x2ETemplate$IIIS = function (val, ctx, partials, inverted, start, end, tags) {
	var pass;
	var func;
	if (val instanceof Array && val.length == 0) {
		return false;
	}
	if (typeof val === 'function') {
		func = val;
		val = Hogan$x2ETemplate$ms$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$IIIS(this, func, ctx, partials, inverted, start, end, tags);
	}
	pass = !! val;
	if (! inverted && pass && ctx) {
		ctx.push(typeof val === 'object' ? val : ctx[ctx.length - 1]);
	}
	return pass;
};


function Hogan$x2ETemplate$s$LHogan$x2ETemplate$XAXHLHogan$x2ETemplate$IIIS($this, val, ctx, partials, inverted, start, end, tags) {
	var pass;
	var func;
	if (val instanceof Array && val.length == 0) {
		return false;
	}
	if (typeof val === 'function') {
		func = val;
		val = Hogan$x2ETemplate$ms$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$IIIS($this, func, ctx, partials, inverted, start, end, tags);
	}
	pass = !! val;
	if (! inverted && pass && ctx) {
		ctx.push(typeof val === 'object' ? val : ctx[ctx.length - 1]);
	}
	return pass;
};

Hogan$x2ETemplate.s$LHogan$x2ETemplate$XAXHLHogan$x2ETemplate$IIIS = Hogan$x2ETemplate$s$LHogan$x2ETemplate$XAXHLHogan$x2ETemplate$IIIS;

Hogan$x2ETemplate.prototype.d$SAXHLHogan$x2ETemplate$B = function (key, ctx, partials, returnFound) {
	var found;
	var names;
	var val;
	var doModelGet;
	var cx;
	var i;
	var a$0;
	names = key.split('.');
	val = Hogan$x2ETemplate$f$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B(this, names[0], ctx, partials, returnFound);
	doModelGet = this.options.modelGet;
	cx = null;
	if (key === '.' && (a$0 = ctx[ctx.length - 2], a$0 instanceof Array)) {
		val = ctx[ctx.length - 1];
	} else {
		for (i = 1; i < names.length; i++) {
			found = Hogan$x2ETemplate$findInScope$SXB(names[i], val, doModelGet);
			if (found != null) {
				cx = val;
				val = found;
			} else {
				val = '';
			}
		}
	}
	if (returnFound && ! val) {
		return false;
	}
	if (! returnFound && typeof val === 'function') {
		ctx.push(cx);
		val = Hogan$x2ETemplate$mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$(this, val, ctx, partials);
		ctx.pop();
	}
	return val;
};


function Hogan$x2ETemplate$d$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B($this, key, ctx, partials, returnFound) {
	var found;
	var names;
	var val;
	var doModelGet;
	var cx;
	var i;
	var a$0;
	names = key.split('.');
	val = Hogan$x2ETemplate$f$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B($this, names[0], ctx, partials, returnFound);
	doModelGet = $this.options.modelGet;
	cx = null;
	if (key === '.' && (a$0 = ctx[ctx.length - 2], a$0 instanceof Array)) {
		val = ctx[ctx.length - 1];
	} else {
		for (i = 1; i < names.length; i++) {
			found = Hogan$x2ETemplate$findInScope$SXB(names[i], val, doModelGet);
			if (found != null) {
				cx = val;
				val = found;
			} else {
				val = '';
			}
		}
	}
	if (returnFound && ! val) {
		return false;
	}
	if (! returnFound && typeof val === 'function') {
		ctx.push(cx);
		val = Hogan$x2ETemplate$mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$($this, val, ctx, partials);
		ctx.pop();
	}
	return val;
};

Hogan$x2ETemplate.d$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B = Hogan$x2ETemplate$d$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B;

Hogan$x2ETemplate.prototype.f$SAXHLHogan$x2ETemplate$B = function (key, ctx, partials, returnFound) {
	var val;
	var v;
	var found;
	var doModelGet;
	var i;
	val = false;
	v = null;
	found = false;
	doModelGet = this.options.modelGet;
	for (i = ctx.length - 1; i >= 0; i--) {
		v = ctx[i];
		val = Hogan$x2ETemplate$findInScope$SXB(key, v, doModelGet);
		if (val != null) {
			found = true;
			break;
		}
	}
	if (! found) {
		if (returnFound) {
			return false;
		} else {
			return "";
		}
	}
	if (! returnFound && typeof val === 'function') {
		val = Hogan$x2ETemplate$mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$(this, val, ctx, partials);
	}
	return val;
};


function Hogan$x2ETemplate$f$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B($this, key, ctx, partials, returnFound) {
	var val;
	var v;
	var found;
	var doModelGet;
	var i;
	val = false;
	v = null;
	found = false;
	doModelGet = $this.options.modelGet;
	for (i = ctx.length - 1; i >= 0; i--) {
		v = ctx[i];
		val = Hogan$x2ETemplate$findInScope$SXB(key, v, doModelGet);
		if (val != null) {
			found = true;
			break;
		}
	}
	if (! found) {
		if (returnFound) {
			return false;
		} else {
			return "";
		}
	}
	if (! returnFound && typeof val === 'function') {
		val = Hogan$x2ETemplate$mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$($this, val, ctx, partials);
	}
	return val;
};

Hogan$x2ETemplate.f$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B = Hogan$x2ETemplate$f$LHogan$x2ETemplate$SAXHLHogan$x2ETemplate$B;

Hogan$x2ETemplate.prototype.ls$F$LHogan$x2ETemplate$XSS$XHLHogan$x2ETemplate$SS = function (func, cx, partials, text, tags) {
	var oldTags;
	var text$0;
	var options$0;
	oldTags = (options$0 = this.options).delimiters;
	options$0.delimiters = tags;
	text$0 = Hogan$x2ETemplate$coerceToString$X(func(this, cx, text));
	if (this.options.disableLambda) {
		throw new Error('Lambda features disabled.');
	}
	this.buf.push(text$0);
	this.options.delimiters = oldTags;
	return false;
};


function Hogan$x2ETemplate$ls$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XSS$XHLHogan$x2ETemplate$SS($this, func, cx, partials, text, tags) {
	var oldTags;
	var text$0;
	var options$0;
	oldTags = (options$0 = $this.options).delimiters;
	options$0.delimiters = tags;
	text$0 = Hogan$x2ETemplate$coerceToString$X(func($this, cx, text));
	if ($this.options.disableLambda) {
		throw new Error('Lambda features disabled.');
	}
	$this.buf.push(text$0);
	$this.options.delimiters = oldTags;
	return false;
};

Hogan$x2ETemplate.ls$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XSS$XHLHogan$x2ETemplate$SS = Hogan$x2ETemplate$ls$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XSS$XHLHogan$x2ETemplate$SS;

Hogan$x2ETemplate.prototype.ct$SXHLHogan$x2ETemplate$ = function (text, cx, partials) {
	if (this.options.disableLambda) {
		throw new Error('Lambda features disabled.');
	}
	return text;
};


function Hogan$x2ETemplate$ct$LHogan$x2ETemplate$SXHLHogan$x2ETemplate$($this, text, cx, partials) {
	if ($this.options.disableLambda) {
		throw new Error('Lambda features disabled.');
	}
	return text;
};

Hogan$x2ETemplate.ct$LHogan$x2ETemplate$SXHLHogan$x2ETemplate$ = Hogan$x2ETemplate$ct$LHogan$x2ETemplate$SXHLHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.b$S = function (s) {
	this.buf.push(s);
};


function Hogan$x2ETemplate$b$LHogan$x2ETemplate$S($this, s) {
	$this.buf.push(s);
};

Hogan$x2ETemplate.b$LHogan$x2ETemplate$S = Hogan$x2ETemplate$b$LHogan$x2ETemplate$S;

Hogan$x2ETemplate.prototype.fl$ = function () {
	var r;
	r = this.buf.join('');
	this.buf = [  ];
	return r;
};


function Hogan$x2ETemplate$fl$LHogan$x2ETemplate$($this) {
	var r;
	r = $this.buf.join('');
	$this.buf = [  ];
	return r;
};

Hogan$x2ETemplate.fl$LHogan$x2ETemplate$ = Hogan$x2ETemplate$fl$LHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.ib$ = function () {
	this.buf = [  ];
};


function Hogan$x2ETemplate$ib$LHogan$x2ETemplate$($this) {
	$this.buf = [  ];
};

Hogan$x2ETemplate.ib$LHogan$x2ETemplate$ = Hogan$x2ETemplate$ib$LHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.ms$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$IIIS = function (func, ctx, partials, inverted, start, end, tags) {
	var textSource;
	var cx;
	var result;
	var func2;
	var activeSub$0;
	cx = ctx[ctx.length - 1];
	result = func(this, cx);
	if (typeof result === 'function') {
		if (inverted) {
			return true;
		} else {
			textSource = ((activeSub$0 = this.activeSub) && this.subsText[activeSub$0] ? this.subsText[this.activeSub] : this.text);
			func2 = result;
			return Hogan$x2ETemplate$ls$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XSS$XHLHogan$x2ETemplate$SS(this, func2, cx, partials, textSource.substring(start, end), tags);
		}
	}
	return !! result;
};


function Hogan$x2ETemplate$ms$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$IIIS($this, func, ctx, partials, inverted, start, end, tags) {
	var textSource;
	var cx;
	var result;
	var func2;
	var activeSub$0;
	cx = ctx[ctx.length - 1];
	result = func($this, cx);
	if (typeof result === 'function') {
		if (inverted) {
			return true;
		} else {
			textSource = ((activeSub$0 = $this.activeSub) && $this.subsText[activeSub$0] ? $this.subsText[$this.activeSub] : $this.text);
			func2 = result;
			return Hogan$x2ETemplate$ls$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XSS$XHLHogan$x2ETemplate$SS($this, func2, cx, partials, textSource.substring(start, end), tags);
		}
	}
	return !! result;
};

Hogan$x2ETemplate.ms$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$IIIS = Hogan$x2ETemplate$ms$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$IIIS;

Hogan$x2ETemplate.prototype.mv$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$ = function (func, ctx, partials) {
	var cx;
	var result;
	var resultfunc;
	var text$0;
	var val$0;
	cx = ctx[ctx.length - 1];
	result = func(this, cx);
	if (typeof result === 'function') {
		resultfunc = result;
		val$0 = resultfunc(this, cx);
		text$0 = (! val$0 ? '' : val$0 + "");
		if (this.options.disableLambda) {
			throw new Error('Lambda features disabled.');
		}
		return text$0;
	}
	return result + "";
};


function Hogan$x2ETemplate$mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$($this, func, ctx, partials) {
	var cx;
	var result;
	var resultfunc;
	var text$0;
	var val$0;
	cx = ctx[ctx.length - 1];
	result = func($this, cx);
	if (typeof result === 'function') {
		resultfunc = result;
		val$0 = resultfunc($this, cx);
		text$0 = (! val$0 ? '' : val$0 + "");
		if ($this.options.disableLambda) {
			throw new Error('Lambda features disabled.');
		}
		return text$0;
	}
	return result + "";
};

Hogan$x2ETemplate.mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$ = Hogan$x2ETemplate$mv$LHogan$x2ETemplate$F$LHogan$x2ETemplate$XX$AXHLHogan$x2ETemplate$;

Hogan$x2ETemplate.prototype.sub$SXHLHogan$x2ETemplate$S = function (name, context, partials, indent) {
	var f;
	f = this.subs[name];
	if (f) {
		this.activeSub = name;
		f(context, partials, this, indent);
		this.activeSub = null;
	}
};


function Hogan$x2ETemplate$sub$LHogan$x2ETemplate$SXHLHogan$x2ETemplate$S($this, name, context, partials, indent) {
	var f;
	f = $this.subs[name];
	if (f) {
		$this.activeSub = name;
		f(context, partials, $this, indent);
		$this.activeSub = null;
	}
};

Hogan$x2ETemplate.sub$LHogan$x2ETemplate$SXHLHogan$x2ETemplate$S = Hogan$x2ETemplate$sub$LHogan$x2ETemplate$SXHLHogan$x2ETemplate$S;

function Hogan$x2ETemplate$findInScope$SXB(key, scope, doModelGet) {
	var val;
	var getfunc;
	val = null;
	if (scope && typeof scope === 'object') {
		if (scope[key] != null) {
			val = scope[key];
		} else if (doModelGet && scope.get && typeof scope.get === 'function') {
			getfunc = scope.get;
			val = getfunc(key);
		}
	}
	return val;
};

Hogan$x2ETemplate.findInScope$SXB = Hogan$x2ETemplate$findInScope$SXB;

function Hogan$x2ETemplate$createSpecializedPartial$LHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$S(instance, subs, partials, stackSubs, stackPartials, childText) {
	return new Hogan$x2ETemplate$2(instance, subs, partials, stackSubs, stackPartials, childText);
};

Hogan$x2ETemplate.createSpecializedPartial$LHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$S = Hogan$x2ETemplate$createSpecializedPartial$LHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$S;

function Hogan$x2ETemplate$coerceToString$X(val) {
	return (! val ? '' : val + "");
};

Hogan$x2ETemplate.coerceToString$X = Hogan$x2ETemplate$coerceToString$X;

function Hogan$x2ETemplate$hoganEscape$S(str) {
	str = Hogan$x2ETemplate$coerceToString$X(str);
	return (Hogan$x2ETemplate.hChars.test(str) ? str.replace(Hogan$x2ETemplate.rAmp, '&amp;').replace(Hogan$x2ETemplate.rLt, '&lt;').replace(Hogan$x2ETemplate.rGt, '&gt;').replace(Hogan$x2ETemplate.rApos, '&#39;').replace(Hogan$x2ETemplate.rQuot, '&quot;') : str);
};

Hogan$x2ETemplate.hoganEscape$S = Hogan$x2ETemplate$hoganEscape$S;

function Hogan$x2ETemplate$isArray$X(a) {
	return a instanceof Array;
};

Hogan$x2ETemplate.isArray$X = Hogan$x2ETemplate$isArray$X;

function Hogan$x2EGeneratedTemplate(code, instance, text, options) {
	Hogan$x2ETemplate$1.call(this);
	this.code = code;
	this.partials = instance.partials;
};

$__jsx_extend([Hogan$x2EGeneratedTemplate], Hogan$x2ETemplate);
Hogan$x2EGeneratedTemplate.prototype.r$AXHLHogan$x2ETemplate$S = function (context, partials, indent) {
	return this.code(context, partials, indent);
};


function Hogan$x2EOptions$x2ECustomTag(o, c) {
	this.o = o;
	this.c = c;
};

$__jsx_extend([Hogan$x2EOptions$x2ECustomTag], Object);
Hogan.rIsWhitespace = /\S/;
Hogan.rQuot = /\"/g;
Hogan.rNewline = /\n/g;
Hogan.rCr = /\r/g;
Hogan.rSlash = /\\/g;
$__jsx_lazy_init(Hogan, "tags", function () {
	return ({ '#': 1, '^': 2, '<': 3, '$': 4, '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9, '{': 10, '&': 11, '_t': 12 });
});
$__jsx_lazy_init(Hogan, "allowedInSuper", function () {
	return ({ '_t': true, '\n': true, '$': true, '/': true });
});
Hogan.serialNo = 0;
$__jsx_lazy_init(Hogan, "codegen", function () {
	return ({ '#': (function (node, context) {
		var s$0;
		var s$1;
		var s$2;
		var s$3;
		if (context.rawJSX) {
			context.code += 'if(t.s$XAXHLHogan$x2ETemplate$IIIS(t.' + (s$0 = node.n, (~ s$0.indexOf('.') ? 'd' : 'f') + "$SAXHLHogan$x2ETemplate$B") + '("' + (s$1 = node.n, s$1.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,1),' + 'c,p,0,' + (node.i + "") + ',' + (node.end + "") + ',"' + node.otag + " " + node.ctag + '")){' + 't.rs$AXHLHogan$x2ETemplate$F$XHLHogan$x2ETemplate$LHogan$x2ETemplate$V$(c,p,' + 'function(c,p,t){';
			Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(node.nodes, context);
			context.code += '});c.pop();}';
		} else {
			context.code += 'if(t.s(t.' + (s$2 = node.n, ~ s$2.indexOf('.') ? 'd' : 'f') + '("' + (s$3 = node.n, s$3.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,1),' + 'c,p,0,' + (node.i + "") + ',' + (node.end + "") + ',"' + node.otag + " " + node.ctag + '")){' + 't.rs(c,p,' + 'function(c,p,t){';
			Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(node.nodes, context);
			context.code += '});c.pop();}';
		}
	}), '^': (function (node, context) {
		var s$0;
		var s$1;
		var s$2;
		var s$3;
		if (context.rawJSX) {
			context.code += 'if(!t.s$XAXHLHogan$x2ETemplate$IIIS(t.' + (s$0 = node.n, (~ s$0.indexOf('.') ? 'd' : 'f') + "$SAXHLHogan$x2ETemplate$B") + '("' + (s$1 = node.n, s$1.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,1),c,p,1,0,0,"")){';
		} else {
			context.code += 'if(!t.s$XAXHLHogan$x2ETemplate$IIIS(t.' + (s$2 = node.n, ~ s$2.indexOf('.') ? 'd' : 'f') + '("' + (s$3 = node.n, s$3.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,1),c,p,1,0,0,"")){';
		}
		Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(node.nodes, context);
		context.code += '};';
	}), '>': (function (node, context) {
		Hogan$createPartial$LHogan$x2EToken$LHogan$x2ECodeObj$(node, context);
	}), '<': (function (node, context) {
		var ctx;
		var template;
		ctx = ({partials: ({  }), code: '', subs: ({  }), prefix: "", inPartial: false, name: "", rawJSX: false});
		ctx.inPartial = true;
		Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(node.nodes, ctx);
		template = context.partials[Hogan$createPartial$LHogan$x2EToken$LHogan$x2ECodeObj$(node, context)];
		template.subs = ctx.subs;
		template.partials = ctx.partials;
	}), '$': (function (node, context) {
		var ctx;
		var s$0;
		var s$1;
		ctx = ({partials: context.partials, code: '', subs: ({  }), prefix: node.n, inPartial: false, name: "", rawJSX: false});
		Hogan$walk$ALHogan$x2EToken$LHogan$x2ECodeObj$(node.nodes, ctx);
		context.subs[node.n] = ctx.code;
		if (! context.inPartial) {
			if (context.rawJSX) {
				context.code += 't.sub$SXHLHogan$x2ETemplate$S("' + (s$0 = node.n, s$0.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,i);';
			} else {
				context.code += 't.sub("' + (s$1 = node.n, s$1.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,i);';
			}
		}
	}), '\n': (function (node, context) {
		var s$0;
		context.code += (s$0 = '"\\n"' + (node.last ? '' : ' + i'), context.rawJSX ? 't.b$S(' + s$0 + ');' : 't.b(' + s$0 + ');');
	}), '_v': (function (node, context) {
		var s$0;
		var s$1;
		var s$2;
		var s$3;
		if (context.rawJSX) {
			context.code += 't.b$S(t.v$S(t.' + (s$0 = node.n, (~ s$0.indexOf('.') ? 'd' : 'f') + "$SAXHLHogan$x2ETemplate$B") + '("' + (s$1 = node.n, s$1.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,0)));';
		} else {
			context.code += 't.b(t.v(t.' + (s$2 = node.n, ~ s$2.indexOf('.') ? 'd' : 'f') + '("' + (s$3 = node.n, s$3.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '",c,p,0)));';
		}
	}), '_t': (function (node, context) {
		var s$0;
		var s$1;
		context.code += (s$1 = '"' + (s$0 = node.text, s$0.replace(Hogan.rSlash, '\\\\').replace(Hogan.rQuot, '\\\"').replace(Hogan.rNewline, '\\n').replace(Hogan.rCr, '\\r')) + '"', context.rawJSX ? 't.b$S(' + s$1 + ');' : 't.b(' + s$1 + ');');
	}), '{': (function (node, context) {
		Hogan$tripleStache$LHogan$x2EToken$LHogan$x2ECodeObj$(node, context);
	}), '&': (function (node, context) {
		Hogan$tripleStache$LHogan$x2EToken$LHogan$x2ECodeObj$(node, context);
	}) });
});
Hogan$x2ETemplate.rAmp = /&/g;
Hogan$x2ETemplate.rLt = /</g;
Hogan$x2ETemplate.rGt = />/g;
Hogan$x2ETemplate.rApos = /\'/g;
Hogan$x2ETemplate.rQuot = /\"/g;
Hogan$x2ETemplate.hChars = /[&<>\"\']/;

var $__jsx_classMap = {
	"system:lib/built-in.jsx": {
		StopIteration: StopIteration,
		StopIteration$: StopIteration
	},
	"src/jsx-init.jsx": {
		JSXInit: JSXInit,
		JSXInit$: JSXInit,
		_Main: _Main,
		_Main$: _Main
	},
	"lib/setting.jsx": {
		Setting: Setting,
		Setting$S: Setting
	},
	"lib/prompt.jsx": {
		Question: Question,
		Question$: Question,
		OpenQuestion: OpenQuestion,
		OpenQuestion$SBSSF$SV$: OpenQuestion,
		OpenQuestion$SBSF$SV$: OpenQuestion$0,
		OpenQuestion$SBSS: OpenQuestion$1,
		OpenQuestion$SBS: OpenQuestion$2,
		Selection: Selection,
		Selection$SSSI: Selection,
		YesNo: YesNo,
		YesNo$SSS: YesNo,
		Prompt: Prompt,
		Prompt$: Prompt
	},
	"lib/template.jsx": {
		Template: Template,
		Template$SSS: Template
	},
	"lib/hogan.jsx": {
		Hogan: Hogan,
		Hogan$: Hogan,
		"Hogan.Options": Hogan$x2EOptions,
		"Hogan.Options$X": Hogan$x2EOptions,
		"Hogan.Options$": Hogan$x2EOptions$0,
		"Hogan.CodeObj": Hogan$x2ECodeObj,
		"Hogan.CodeObj$": Hogan$x2ECodeObj,
		"Hogan.CodeObj$LHogan$x2ECodeObj$": Hogan$x2ECodeObj$0,
		"Hogan.CodeObj$LHogan$x2ECodeObj$LHogan$x2EToken$": Hogan$x2ECodeObj$1,
		"Hogan.CodeObj$LHogan$x2EToken$": Hogan$x2ECodeObj$2,
		"Hogan.Token": Hogan$x2EToken,
		"Hogan.Token$SS": Hogan$x2EToken,
		"Hogan.Token$S": Hogan$x2EToken$0,
		"Hogan.Token$SSSSI": Hogan$x2EToken$1,
		"Hogan.Template": Hogan$x2ETemplate,
		"Hogan.Template$SLHogan$x2EOptions$": Hogan$x2ETemplate,
		"Hogan.Template$S": Hogan$x2ETemplate$0,
		"Hogan.Template$": Hogan$x2ETemplate$1,
		"Hogan.Template$LHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$HLHogan$x2ETemplate$S": Hogan$x2ETemplate$2,
		"Hogan.Template$HLHogan$x2ETemplate$HF$XHLHogan$x2ETemplate$LHogan$x2ETemplate$SV$": Hogan$x2ETemplate$3,
		"Hogan.Template$LHogan$x2ECodeObj$": Hogan$x2ETemplate$4,
		"Hogan.GeneratedTemplate": Hogan$x2EGeneratedTemplate,
		"Hogan.GeneratedTemplate$F$AXHLHogan$x2ETemplate$SS$LHogan$x2ETemplate$SLHogan$x2EOptions$": Hogan$x2EGeneratedTemplate,
		"Hogan.Options.CustomTag": Hogan$x2EOptions$x2ECustomTag,
		"Hogan.Options.CustomTag$SS": Hogan$x2EOptions$x2ECustomTag
	}
};


/**
 * launches _Main.main(:string[]):void invoked by jsx --run|--executable
 */
JSX.runMain = function (sourceFile, args) {
	var module = JSX.require(sourceFile);
	if (! module) {
		throw new ReferenceError("entry point module not found in " + sourceFile);
	}
	if (! module._Main) {
		throw new ReferenceError("entry point _Main not found in " + sourceFile);
	}
	if (! module._Main.main) {
		throw new ReferenceError("entry point _Main.main(:string[]):void not found in " + sourceFile);
	}
	module._Main.main(args);
};

/**
 * launches _Test#test*():void invoked by jsx --test
 */
JSX.runTests = function (sourceFile, tests) {
	var module = JSX.require(sourceFile);
	if (! module) return;

	var testClass = module._Test;

	if (!testClass) return; // skip if there's no test class

	if(tests.length === 0) {
		var p = testClass.prototype;
		for (var m in p) {
			if (p[m] instanceof Function && m.match(/^test\w*$/)) {
				tests.push(m);
			}
		}
	}

	var testCase = new testClass();

	if (testCase.beforeClass != null)
		testCase.beforeClass(tests);

	for (var i = 0; i < tests.length; ++i) {
		(function (method) {
			if (method in testCase) {
				testCase.run(method, function() { testCase[method](); });
			}
			else {
				throw new ReferenceError("No such test method: " + method);
			}
		}(tests[i]));
	}

	if (testCase.afterClass != null)
		testCase.afterClass();
};
JSX.runMain("src/jsx-init.jsx", process.argv.slice(2));
})(JSX);
